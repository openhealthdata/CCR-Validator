/*
 * Copyright 2010 OpenHealthData, Inc.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.

 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#created on: Apr 29, 2008
package org.astm.ccr.rules.meaningfuluse

#list any import classes here.
import org.openhealthdata.validation.result.ValidationResultManager;
import org.openhealthdata.validation.result.TestResultType;
import org.openhealthdata.validation.result.ErrorType;
import org.openhealthdata.validator.tree.Element;

import org.astm.ccr.StructuredProductType;
import org.astm.ccr.StructuredProductType.Product;
import org.astm.ccr.Medications;
import org.astm.ccr.CodedDescriptionType;
import org.astm.ccr.CodeType;

#declare any global variables here
global ValidationResultManager val_result;


rule "Medication product code should be encoded in RXNORM or NDC"
@title ("Medication product code MUST be encoded in RXNORM")
@testid ("8bf19d27-5b71-4786-8330-85c7469ec111")
@description ("This test checks for at least one code with a coding system of either RxNorm or NDC. Criteria is any code set by an RxNorm drug data source provider that is identified by the NLM as being integrated within RxNorm")
@source ("RIN 0991-AB58 Sec 170.205(2)(iv)(A)")
@profile ("RIN 0991-AB58")
@author ("openhealthdata")
	when
		Medications($m:medication )
		$s:StructuredProductType( $p:product) from $m
		Product( this == $p, $pn:productName )
		CodedDescriptionType( this == $pn, $c:code  )
		not (CodeType( codingSystem in ("rxnorm", "RxNorm", "RXNORM", "NDC", "ndc") ) from $c)
	then
		String testid = drools.getRule().getMetaAttribute("testid");
		String title = drools.getRule().getMetaAttribute("title");
		String description = drools.getRule().getMetaAttribute("description");
		String source = drools.getRule().getMetaAttribute("source");
		String profile = drools.getRule().getMetaAttribute("profile"); 
		val_result.addTest(
			testid,
			title,
			description+ " Source: "+
			source,
			TestResultType.FAILED, profile);
		ErrorType e = new ErrorType();
		e.setMessage("Medication ["+
			$s.getCCRDataObjectID()+"] ProductName does not appear to be coded in RxNorm");
		e.setServerity(ErrorType.FATAL);
		val_result.addError(testid, e);	
end

rule "MU - No Medication List Found in CCR"
@title ("Medication List must be supported by the certified EHR technology but are not required for each CCR")
@testid ("cceef309-dac4-402a-923c-699e53e65ae9")
@description ("Checks to see if Medication are provided in the CCR")
@source ("RIN 0991-AB58 Sec 170.205(2)(iv)")
@profile ("RIN 0991-AB58")
@author ("openhealthdata")
	when
		not Element( xpath.name == "Medication" )
	then
		String testid = drools.getRule().getMetaAttribute("testid");
		String title = drools.getRule().getMetaAttribute("title");
		String description = drools.getRule().getMetaAttribute("description");
		String source = drools.getRule().getMetaAttribute("source");
		String profile = drools.getRule().getMetaAttribute("profile"); 
		val_result.addTest(
			testid,
			title,
			description+ " Source: "+
			source,
			TestResultType.PASSED, profile);
		ErrorType e = new ErrorType();
		e.setMessage("No Medications were found therefore cannot evaluate compliance with Medication List criteria");
		e.setServerity(ErrorType.WARN);
		val_result.addError(testid, e);
end
